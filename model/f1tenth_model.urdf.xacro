<?xml version="1.0"?>
<robot name="f1tenth_model" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:property name="wheelbase" value="0.324"/>
    <xacro:property name="chassis_length" value="0.5" />
    <xacro:property name="chassis_width" value="0.18964" />
    <xacro:property name="chassis_height" value="0.10" />
    <xacro:property name="chassis_mass" value="3.44" />
    <xacro:property name="wheel_mass" value="0.075" />
    <xacro:property name="wheel_radius" value="0.0381" />
    <xacro:property name="wheel_length" value="0.04318" />
    <xacro:property name="tire_thickness" value="0.012" />
    <xacro:property name="arm_length" value="0.019" />
    <xacro:property name="arm_radius" value="0.005" />
    <xacro:property name="arm_mass" value="0.005" />
    <xacro:property name="knuckle_radius" value="0.0025" />
    <xacro:property name="knuckle_mass" value="${arm_mass * (arm_length - knuckle_radius) / arm_length}" />
    <xacro:property name="max_steering_angle" value="0.6" />
    <xacro:property name="max_steering_angular_velocity" value="2.0" />
    <xacro:property name="max_wheel_angular_velocity" value="20.0"/>
    <xacro:property name="wheel_mu" value="1.5" />
    <xacro:property name="chassis_mu" value="0.1" />


    <material name="papaya orange">
        <color rgba="1.0 ${128 / 255} 0.0 1.0" />
    </material>

    <material name="tire color">
        <color rgba="0.0 0.0 0.0 1.0" />
    </material>

    <material name="steering link color">
        <color rgba="${189 / 255} ${55 / 255} ${10 / 255} 1.0" />
    </material>

    <material name="steering arm color">
        <color rgba="${166 / 255} ${166 / 255} ${166 / 255} 1.0" />
    </material>

    <xacro:macro name="box_inertial" params="mass length width height">
        <inertial>
                <mass value="${mass}" />
                <inertia ixx="${1 / 12 * mass * (width * width + height * height)}" ixy="0.0" ixz="0.0" 
                        iyy="${1 / 12 * mass * (length * length + height * height)}" iyz="0.0" 
                        izz="${1 / 12 * mass * (length * length + width * width)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_geometry" params="length radius">
        <geometry>
            <cylinder length="${length}" radius="${radius}"/>
        </geometry>
    </xacro:macro>

    <!-- dummy link cuz KDL doesn't support a root link with inertia???? idfk -->
    <link name="base_link"/>

    <joint name="dummy_to_chassis" type="fixed" >
        <parent link="base_link" />
        <child link="chassis" />
    </joint>

    <link name="chassis">
        <visual>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>
            <material name="papaya orange" />
        </visual>
        <collision>
            <geometry>
                <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
            </geometry>   
        </collision>
        <xacro:box_inertial mass="${chassis_mass}" length="${chassis_length}" width="${chassis_width}" height="${chassis_height}" />
    </link>

    <xacro:macro name="tire_inertial" params="mass outer_radius inner_radius width">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${mass}" />
            <inertia ixx="${1 / 12 * mass * (3 * (outer_radius * outer_radius + inner_radius * inner_radius) + width * width)}" ixy="0.0" ixz="0.0" 
                    iyy="${1 / 12 * mass * (3 * (outer_radius * outer_radius + inner_radius * inner_radius) + width * width)}" iyz="0.0" 
                    izz="${1 / 2 * mass * (outer_radius * outer_radius + inner_radius * inner_radius)}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="wheel" params="prefix mass radius length">
        <link name="${prefix}_wheel">
            <visual>
                <xacro:cylinder_geometry length="${length}" radius="${radius}" />
                <material name="tire color"/>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            </visual>
            <collision>
                <xacro:cylinder_geometry length="${length}" radius="${radius}" />
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            </collision>
            <xacro:tire_inertial mass="${mass}" outer_radius="${radius}" inner_radius="${radius - tire_thickness}" width="${length}" />
        </link>
    </xacro:macro>

    <!-- Wheel definitions  -->
    <xacro:wheel prefix="front_left" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" />
    <xacro:wheel prefix="front_right" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" />
    <xacro:wheel prefix="back_left" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" />
    <xacro:wheel prefix="back_right" mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_length}" />


    <xacro:macro name="arm_inertial" params="mass radius length">
        <inertial>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <mass value="${mass}" />
            <inertia ixx="${1 / 12 * mass * (3 * radius * radius + length * length)}" ixy="0.0" ixz="0.0" 
                        iyy="${1 / 12 * mass * (3 * radius * radius + length * length)}" iyz="0.0" 
                        izz="${1 / 2 * mass * radius * radius}" />
        </inertial>
    </xacro:macro>

    

    <xacro:macro name="arm" params="prefix mass radius length">
        <link name="${prefix}_arm">
            <visual>
                <xacro:cylinder_geometry length="${length}" radius="${radius}" />
                <material name="steering arm color"/>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            </visual>
            <collision>
                <xacro:cylinder_geometry length="${length}" radius="${radius}" />
            </collision>
            <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
            <xacro:arm_inertial mass="${mass}" radius="${radius}" length="${length}" />
        </link>
    </xacro:macro>

    <!-- Wheel Arm definitions -->
    <xacro:arm prefix="front_left" mass="${arm_mass - knuckle_mass}" radius="${arm_radius}" length="${arm_length - knuckle_radius}" />
    <xacro:arm prefix="front_right" mass="${arm_mass - knuckle_mass}" radius="${arm_radius}" length="${arm_length - knuckle_radius}" />
    <xacro:arm prefix="back_left" mass="${arm_mass}" radius="${arm_radius}" length="${arm_length}" />
    <xacro:arm prefix="back_right" mass="${arm_mass}" radius="${arm_radius}" length="${arm_length}" />

    <xacro:macro name="sphere_inertial" params="mass radius">
        <inertial>
                <mass value="${mass}" />
                <inertia ixx="${2 / 5 * mass * radius * radius}" ixy="0.0" ixz="0.0" 
                        iyy="${2 / 5 * mass * radius * radius}" iyz="0.0" 
                        izz="${2 / 5 * mass * radius * radius}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="steering" params="prefix mass radius">
        <link name="${prefix}_steering_knuckle">
            <visual>
                <geometry>
                    <sphere radius="${radius}"/>
                </geometry>
                <material name="steering link color"/>
            </visual>
            <collision>
                <geometry>
                    <sphere radius="${radius}"/>
                </geometry>
            </collision>
            <xacro:sphere_inertial mass="${knuckle_mass}" radius="${knuckle_radius}" />
        </link>
    </xacro:macro>

    <!-- Steering knuckle definition -->
    <xacro:steering prefix="front_left" mass="${knuckle_mass}" radius="${knuckle_radius}" />
    <xacro:steering prefix="front_right" mass="${knuckle_mass}" radius="${knuckle_radius}" />

    <xacro:macro name="spinning_joint" params="prefix parent y_offset">
        <joint name="${prefix}_spinning" type="continuous">
            <parent link="${prefix}_${parent}" />
            <child link="${prefix}_wheel" />
            <axis xyz="0 1 0" />
            <origin xyz="0 ${y_offset} 0" rpy="0 0 0" />
         </joint>
    </xacro:macro>

    <!-- Wheel Spinning joint definition -->
    <xacro:spinning_joint prefix="front_right" parent="steering_knuckle" y_offset="${-(knuckle_radius + wheel_length / 2)}" />
    <xacro:spinning_joint prefix="front_left" parent="steering_knuckle" y_offset="${knuckle_radius + wheel_length / 2}" />
    <xacro:spinning_joint prefix="back_right" parent="arm" y_offset="${-(arm_length / 2 + wheel_length / 2)}" />
    <xacro:spinning_joint prefix="back_left" parent="arm" y_offset="${arm_length / 2 + wheel_length / 2}" />

    <xacro:macro name="steering_joint" params="prefix y_offset" >
        <joint name="${prefix}_steering" type="revolute">
            <parent link="${prefix}_arm" />
            <child link="${prefix}_steering_knuckle" />
            <axis xyz="0 0 1" />
            <limit lower="${-max_steering_angle}" upper="${max_steering_angle}" effort="10.0" velocity="${max_steering_angular_velocity}"/>
            <origin xyz="0 ${y_offset} 0" rpy="0 0 0" />
        </joint>
    </xacro:macro>

    <!-- Steering joint definitions -->
    <xacro:steering_joint prefix="front_right" y_offset="${-((arm_length - knuckle_radius) / 2 + knuckle_radius)}" />
    <xacro:steering_joint prefix="front_left" y_offset="${(arm_length - knuckle_radius) / 2 + knuckle_radius}" />

    <xacro:macro name="arm_joint" params="prefix x_offset y_offset" >
        <joint name="${prefix}_arm_fixed" type="fixed">
            <parent link="chassis"/>
            <child link="${prefix}_arm"/>
            <origin xyz="${x_offset} ${y_offset} -0.04" rpy="0 0 0" />
        </joint>
    </xacro:macro>

    <!-- Arm to chassis joints -->
    <xacro:arm_joint prefix="front_right" x_offset="${wheelbase / 2}" y_offset="${-((arm_length - knuckle_radius) / 2 + chassis_width / 2)}" />
    <xacro:arm_joint prefix="front_left" x_offset="${wheelbase / 2}" y_offset="${(arm_length - knuckle_radius) / 2 + chassis_width / 2}" />
    <xacro:arm_joint prefix="back_right" x_offset="${-wheelbase / 2}" y_offset="${-(arm_length / 2 + chassis_width / 2)}" />
    <xacro:arm_joint prefix="back_left" x_offset="${-wheelbase / 2}" y_offset="${arm_length / 2 + chassis_width / 2}" />

    <xacro:macro name="ros2_control_steering" params="prefix max_angle">
        <joint name="${prefix}_steering">
            <command_interface  name="position">
                <param name="min">${-max_angle}</param>
                <param name="max">${max_angle}</param>
            </command_interface>
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint>
    </xacro:macro>


    <xacro:macro name="ros2_control_spinning" params="prefix">
        <joint name="${prefix}_spinning">
            <command_interface name="velocity" /> 
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint>
    </xacro:macro>


    <ros2_control name="GazeboSimSystem" type="system">
        <hardware>
            <plugin>gz_ros2_control/GazeboSimSystem</plugin>
        </hardware>

        <xacro:ros2_control_steering prefix="front_left" max_angle="${max_steering_angle}"/>
        <xacro:ros2_control_steering prefix="front_right" max_angle="${max_steering_angle}"/>
        <xacro:ros2_control_spinning prefix="front_left"/>
        <xacro:ros2_control_spinning prefix="front_right"/>
        <xacro:ros2_control_spinning prefix="back_left"/>
        <xacro:ros2_control_spinning prefix="back_right"/>

    </ros2_control>
    
    <gazebo>
        <plugin filename="libgz_ros2_control-system.so" name="gz_ros2_control::GazeboSimROS2ControlPlugin">
            <parameters>$(find f1tenth_gz_sim)/config/vehicle_controllers.yaml</parameters>
        </plugin>

        <!-- <plugin filename="gz-sim-imu-system"
            name="gz::sim::systems::Imu">
        </plugin>

        <plugin
            filename="gz-sim-sensors-system"
            name="gz::sim::systems::Sensors">
            <render_engine>ogre2</render_engine>
        </plugin> -->

    </gazebo>


    <xacro:macro name="gz_friction" params="link mu">
        <gazebo reference="${link}">
            <mu1>${mu}</mu1>
            <mu2>${mu}</mu2>
        </gazebo>
    </xacro:macro>

    <xacro:gz_friction link="front_left_wheel" mu="${wheel_mu}" />
    <xacro:gz_friction link="front_right_wheel" mu="${wheel_mu}" />
    <xacro:gz_friction link="back_left_wheel" mu="${wheel_mu}" />
    <xacro:gz_friction link="back_right_wheel" mu="${wheel_mu}" />

    <xacro:gz_friction link="chassis" mu="${chassis_mu}" />

</robot>